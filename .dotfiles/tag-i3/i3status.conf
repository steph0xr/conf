general {
    interval 		= 1
    colors 			= true
    color_good      = '#88b090'
    color_degraded  = '#ccdc90'
    color_bad       = '#e89393'
}

#order += "air_quality"
order += "path_exists VPN"
order += "wireless wlp0s20f3"
order += "ethernet enp0s31f6"
order += "cpu_temperature 0"
order += "disk /"
order += "memory"
order += "load"
order += "static_string"
order += "volume master"
order += "battery 0"
order += "tztime local"

static_string {
    #audio:
    format = shell(echo "$(pacmd list-sources | grep 'active port' | awk -F'[<>]' '{print $2}'\) \| $(pacmd list-sinks | grep 'active port' | awk -F'[<>]' '{print $2}'\)", str)
}

air_quality {
    format = '{city_name}: {aqi} {category} - {time}'
    format_datetime = {'time': '%-I%P'}
}

# audiosink {
#     display_name_mapping = {"Family 17h/19h HD Audio Controller Analog Stereo": "Int", "ThinkPad Dock USB Audio Analog Stereo": "Dock"}
#     format = r"{audiosink}"
#     sinks_to_ignore = ["Renoir Radeon High Definition Audio Controller Digital Stereo (HDMI)"]
# }

imap {
    cache_timeout = 60
    imap_server = 'imap.myprovider.com'
    mailbox = 'INBOX'
    password = 'coconut'
    port = '993'
    user = 'mylogin'
    on_click 1 = "exec thunderbird"
}

volume master {
        format = "â™ª: %volume"
        format_muted = "â™ª: muted (%volume)"
        device = "default"
        mixer = "Master"
        mixer_idx = 0
}

wireless wlp0s20f3 {
        format_up = "W: (%quality at %essid, %bitrate) %ip"
        format_down = "W: down"
}

ethernet enp0s31f6 {
        format_up = "E: %ip (%speed)"
        format_down = "E: down"
}

battery 0 {
        format = "%status %percentage (%remaining %emptytime)"
        format_down = "No battery"
        status_chr = "âš¡"
        status_bat = "ðŸ”‹"
        status_unk = "?"
        status_full = "â˜» "
        path = "/sys/class/power_supply/BAT0/uevent"
        low_threshold = 10
        integer_battery_capacity = true
}

run_watch DHCP {
        pidfile = "/var/run/dhclient*.pid"
}

run_watch VPNC {
        # file containing the PID of a vpnc process
        pidfile = "/var/run/vpnc/pid"
}

path_exists VPN {
        # path exists when a VPN tunnel launched by nmcli/nm-applet is active
        path = "/proc/sys/net/ipv4/conf/tap0"
}

tztime local {
        format = "%b-%d %H:%M:%S"
}

tztime berlin {
        format = "%b-%d %H:%M:%S %Z"
        timezone = "Europe/Berlin"
}

load {
        format = "cpu:%1min-%5min"
}

cpu_temperature 0 {
        format = "T: %degrees Â°C"
        path = "/sys/devices/platform/coretemp.0/hwmon/hwmon3/temp1_input"
}

memory {
        format = "m:%used"
        threshold_degraded = "10%"
        format_degraded = "MEMORY: %free"
}

disk "/" {
        format = "dsk:%free"
}

read_file uptime {
        path = "/proc/uptime"
}
